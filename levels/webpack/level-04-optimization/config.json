{
  "title": "代码分割与优化",
  "description": "<h3>🎯 学习目标</h3><p>学习 webpack 的代码分割技术，优化打包策略和加载性能。</p><h3>📝 任务说明</h3><p>请完成以下配置：</p><ul><li>配置 <code>splitChunks</code> 提取公共代码</li><li>设置 <code>runtimeChunk</code> 分离运行时代码</li><li>使用动态导入实现懒加载</li></ul><h3>💡 提示</h3><p>代码分割可以减少初始加载时间，提升用户体验。合理的分割策略很重要。</p>",
  "files": ["webpack.config.js", "src/index.js", "src/utils.js", "src/components/LazyComponent.js"],
  "difficulty": "advanced",
  "estimatedTime": "25分钟",
  "validation": {
    "required": [
      {
        "key": "optimization:",
        "message": "请添加 optimization 配置",
        "hints": ["optimization 用于配置 webpack 的优化选项"]
      },
      {
        "key": "splitChunks:",
        "message": "请配置 splitChunks 进行代码分割",
        "hints": ["splitChunks 可以将代码分割成多个 chunk"]
      },
      {
        "key": "runtimeChunk:",
        "message": "请配置 runtimeChunk 分离运行时代码",
        "hints": ["runtimeChunk: 'single' 可以将运行时代码分离到单独文件"]
      },
      {
        "key": "chunks: 'all'",
        "message": "请设置 chunks 为 'all' 以分割所有类型的 chunk",
        "hints": ["chunks: 'all' 会分割同步和异步导入的模块"]
      }
    ]
  }
}